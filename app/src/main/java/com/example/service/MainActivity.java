package com.example.service;import android.app.Service;import android.content.ComponentName;import android.content.Intent;import android.content.ServiceConnection;import android.os.IBinder;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;public class MainActivity extends AppCompatActivity {    Intent intent1;    Intent intent2;    MyBindService service;    ServiceConnection conn = new ServiceConnection(){        @Override        //当启动源跟service的连接意外丢失的时候调用这个方法        //比如当service崩溃了或则强行杀死了        public void onServiceDisconnected(ComponentName name) {        }        @Override        //当启动源跟service成功连接之后将会自动调用这个方法        public void onServiceConnected(ComponentName name, IBinder Binder) {            service = ((MyBindService.MyBinder)Binder).getService();        }    };    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Button button2 = findViewById(R.id.button2);        button2.setText("this is 1,to 2");        button2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {               Intent intent = new Intent(MainActivity.this,MainActivity2.class);               startActivity(intent);            }        });    }    public void doClick(View v){        switch (v.getId()){            case R.id.start:                intent1 = new Intent(MainActivity.this, MyBindService.class);                startService(intent1);                break;            case R.id.stop://                stopService(intent1) ;                stopService(intent2) ;                break;            case R.id.play:                service.play();                break;            case R.id.pause:                service.pause();                break;            case R.id.pervious:                service.perious();                break;            case R.id.next:                service.next();                break;            case R.id.bind:                intent2 = new Intent(MainActivity.this,MyBindService.class);                //用于直接退出服务时调用                //startService(intent2);                bindService(intent2,conn, Service.BIND_AUTO_CREATE);//                startService(intent2);                break;            case R.id.unbind:                unbindService(conn);                break;        }    }    /*@Override    //用于直接退出服务时调用    protected void onDestroy() {        stopService(intent2);        unbindService(conn);        super.onDestroy();    }*/}